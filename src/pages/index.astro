---
import HomeComponent from "../components/Home.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import HeaderComponent from "../components/Header.astro";
import FooterComponent from "../components/Footer.astro";
import "../styles/global.css";
---

<BaseLayout>
	<HeaderComponent />
	<HomeComponent />
	<h1 id="welcome"></h1>
	<p id="hello"></p>

	<!-- build the buttons -->
	<div id="lang-switcher"></div>
	<FooterComponent />
</BaseLayout>

<script>
	import i18next from "../i18n.js";

	// function to update all texts
	function updateContent() {
		document.getElementById("welcome")!.innerText = i18next.t("welcome");
		document.getElementById("hello")!.innerText = i18next.t("hello");
	}

	// // initialize UI
	// i18next.on("initialized", () => {
	// 	updateContent();

	// 	// dynamically build language switcher
	// 	const container = document.getElementById("lang-switcher");
	// 	container!.innerHTML = ""; // clear old buttons

	// 	// Static list
	// 	// if (Array.isArray(i18next.options.supportedLngs)) {
	// 	// 	i18next.options.supportedLngs?.forEach((lng: string) => {
	// 	// 		if (lng === "cimode") return; // i18next internal test mode, skip
	// 	// 		const btn = document.createElement("button");
	// 	// 		btn.innerText = lng.toUpperCase();
	// 	// 		btn.addEventListener("click", () =>
	// 	// 			i18next.changeLanguage(lng),
	// 	// 		);
	// 	// 		container!.appendChild(btn);
	// 	// 	});
	// 	// }

	// 	// Dynamic list from config file
	// 	fetch("/locales/languages.json")
	// 		.then((res) => res.json())
	// 		.then((langs) => {
	// 			const container = document.getElementById("lang-switcher");
	// 			langs.forEach((lng: string) => {
	// 				const btn = document.createElement("button");
	// 				btn.innerText = lng.toUpperCase();
	// 				btn.addEventListener("click", () => i18next.changeLanguage(lng));
	// 				container!.appendChild(btn);
	// 			});
	// 		});
	// });

	// i18next.on("languageChanged", () => updateContent());

	// Build dynamic language buttons

	function buildLanguageSwitcher() {
		// const container = document.getElementById("lang-switcher");
		// container!.innerHTML = ""; // clear old buttons

		const displayNames = new Intl.DisplayNames([i18next.language], {
			type: "language",
		});

		// // Static list
		// if (Array.isArray(i18next.options.supportedLngs)) {
		// 	i18next.options.supportedLngs?.forEach((lng: string) => {
		// 		if (lng === "cimode") return;
		// 		const btn = document.createElement("button");
		// 		btn.innerText = displayNames.of(lng) || lng.toUpperCase();
		// 		btn.addEventListener("click", () => i18next.changeLanguage(lng));
		// 		container!.appendChild(btn);
		// 	});
		// }

		// Dynamic list from config file
		fetch("/locales/languages.json")
			.then((res) => res.json())
			.then((langs) => {
				const container = document.getElementById("lang-switcher");
				container!.innerHTML = ""; // clear old buttons
				console.log(langs);
				langs.forEach((lng: string) => {
					const btn = document.createElement("button");
					// btn.innerText = lng.toUpperCase();
					btn.innerText = displayNames.of(lng) || lng.toUpperCase();
					btn.addEventListener("click", () =>
						i18next.changeLanguage(lng),
					);
					container!.appendChild(btn);
				});
			});
	}

	i18next.on("initialized", () => {
		updateContent();
		buildLanguageSwitcher();
	});

	i18next.on("languageChanged", () => {
		updateContent();
		buildLanguageSwitcher(); // rebuild so names update according to new UI language
	});
</script>
